{"version":3,"sources":["components/TodoList/TodoList.jsx","api/todos.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["classNames","require","TodoList","state","search","sortBy","handleChangeInput","value","target","setState","toSearch","todo","title","toLowerCase","includes","handleChangeSelect","filterTodosByStatus","completed","this","props","todos","onSelect","onChange","filteredTodos","filter","className","type","map","key","id","checked","onClick","userId","React","Component","BASE_URL","CurrentUser","name","email","phone","loadDate","prevState","fetch","then","response","json","user","data","onClear","App","selectedUserId","toggleTodoStatus","selectUser","clearUser","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a754350.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.scss';\n\nconst classNames = require('classnames');\n\nexport class TodoList extends React.Component {\n  state = {\n    search: '',\n    sortBy: 'all',\n  }\n\n  handleChangeInput = ({ target }) => {\n    const { value } = target;\n\n    this.setState({ search: value });\n  }\n\n  // eslint-disable-next-line consistent-return\n  toSearch = (todo) => {\n    const { search } = this.state;\n\n    if (todo.title !== null) {\n      return todo.title.toLowerCase().includes(search.toLowerCase());\n    }\n  }\n\n  handleChangeSelect = ({ target }) => {\n    const { value } = target;\n\n    this.setState({ sortBy: value });\n  }\n\n  filterTodosByStatus = (todo) => {\n    const { sortBy } = this.state;\n\n    switch (sortBy) {\n      case 'active':\n        return !todo.completed;\n      case 'completed':\n        return todo.completed;\n      default:\n        return todo;\n    }\n  }\n\n  render() {\n    const { todos, onSelect, onChange } = this.props;\n    const { search } = this.state;\n\n    const filteredTodos = todos.filter(this.toSearch)\n      .filter(this.filterTodosByStatus);\n\n    return (\n      <div className=\"TodoList\">\n        <h2>Todos:</h2>\n        <input\n          type=\"text\"\n          value={search}\n          onChange={this.handleChangeInput}\n        />\n        <select onChange={this.handleChangeSelect}>\n          <option value=\"all\">all</option>\n          <option value=\"active\">active</option>\n          <option value=\"completed\">completed</option>\n        </select>\n\n        <div className=\"TodoList__list-container\">\n          <ul className=\"TodoList__list\">\n            {filteredTodos.map(todo => (\n              <li\n                key={todo.id}\n                className={classNames(\n                  'TodoList__item',\n                  { 'TodoList__item--unchecked': !todo.completed },\n                  { 'TodoList__item--checked': todo.completed },\n                )}\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => onChange(todo.id)}\n                  />\n                  <p>{todo.title}</p>\n                </label>\n\n                <button\n                  className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n                  onClick={() => onSelect(todo.userId)}\n                  type=\"button\"\n                >\n                  {`User ${todo.userId}`}\n                </button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    completed: PropTypes.bool.isRequired,\n    userId: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n  }).isRequired).isRequired,\n  onSelect: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://mate-api.herokuapp.com';\n\nexport function getAllTodos() {\n  return fetch(`${BASE_URL}/todos`)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`${BASE_URL}/users/${userId}`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/todos';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    id: 0,\n  }\n\n  componentDidMount() {\n    this.loadDate();\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.id !== this.props.userId && prevState.id !== 0) {\n      this.loadDate();\n    }\n  }\n\n  async loadDate() {\n    await getUser(this.props.userId)\n      .then(user => this.setState({ ...user.data }));\n  }\n\n  render() {\n    const { name, email, phone, id } = this.state;\n    const { onClear } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>{`Selected user: ${id}`}</span>\n        </h2>\n\n        <h3 className=\"CurrentUser__name\">{name}</h3>\n        <p className=\"CurrentUser__email\">{email}</p>\n        <p className=\"CurrentUser__phone\">{phone}</p>\n        <button\n          type=\"submit\"\n          className=\"button\"\n          onClick={onClear}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getAllTodos } from './api/todos';\n\nclass App extends React.Component {\n  state = {\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount() {\n    getAllTodos()\n      .then(({ data }) => {\n        this.setState({\n          todos: data.map((item) => {\n            if (item.completed === null) {\n              return {\n                ...item,\n                completed: false,\n              };\n            }\n\n            return { ...item };\n          }),\n        });\n      });\n  }\n\n  toggleTodoStatus = (id) => {\n    this.setState(state => (\n      {\n        todos: state.todos.map((todo) => {\n          if (todo.id === id) {\n            return {\n              ...todo, completed: !todo.completed,\n            };\n          }\n\n          return { ...todo };\n        }),\n      }\n\n    ));\n  };\n\n  selectUser = (userId) => {\n    this.setState({ selectedUserId: userId });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            onSelect={this.selectUser}\n            onChange={this.toggleTodoStatus}\n          />\n        </div>\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} onClear={this.clearUser} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}